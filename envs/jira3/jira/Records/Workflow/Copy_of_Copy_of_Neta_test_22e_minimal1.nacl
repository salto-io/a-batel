jira.Workflow Copy_of_Copy_of_Neta_test_22e_minimal1@s {
  description = "aaa"
  transitions = {
    Create__From__none__Initial@fffsff = {
      name = "Create"
      description = ""
      to = jira.Status.instance.open
      type = "initial"
      rules = {
        validators = [
          {
            type = "PermissionValidator"
            configuration = {
              permissionKey = "CREATE_ISSUES"
            }
          },
        ]
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Issue_Created@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    }
    Build_Broken__From__any_status__Global@sfffssff = {
      name = "Build Broken"
      description = ""
      to = jira.Status.instance.build_broken@s
      type = "global"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    }
    Focus__From__A_shared_status3_Approved__Directed@fffssszdff = {
      name = "Focus"
      description = "desc2"
      from = [
        {
          id = jira.Status.instance.approved
        },
        {
          id = jira.Status.instance.a_shared_status3@s
        },
      ]
      to = jira.Status.instance.build_broken@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.AL__Kanban_Bug_Screen@fsss
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
        conditions = {
          type = "PreviousStatusCondition"
          configuration = {
            ignoreLoopTransitions = true
            includeCurrentStatus = true
            mostRecentStatusOnly = true
            reverseCondition = true
            previousStatus = {
              id = jira.Status.instance.build_broken@s
            }
          }
        }
      }
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    }
  }
  statuses = [
    {
      id = jira.Status.instance.a_shared_status3@s
      name = "A shared status3"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.an_inactive_status@s
      name = "An Inactive Status"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "testKey"
          value = "testValue"
        },
      ]
    },
    {
      id = jira.Status.instance.approved
      name = "Approved"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.authorize
      name = "Authorize"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.build_broken@s
      name = "Build Broken"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.in_progress@s
      name = "In Progress"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.open
      name = "Open"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
  ]
  name = "Copy of Copy of Neta test 22e minimal1"
}
